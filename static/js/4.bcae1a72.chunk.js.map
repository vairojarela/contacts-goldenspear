{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Contacts.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","asideStyles","height","backgroundColor","alphabetStyles","textAlign","overflowY","Contacts","clients","alphabet","toUpperCase","split","sort","a","b","name","localeCompare","useState","searchTerm","setSearchTerm","handleChange","event","target","innerText","console","log","filteredClients","filter","person","toLowerCase","includes","toLocaleLowerCase","className","map","letter","index","style","key","onClick","type","onChange","placeholder","client","to","id"],"mappings":"mIAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,2EI0DMC,EAAc,CAClBC,OAAQ,OACRC,gBAAiB,SAGbC,EAAiB,CACrBC,UAAW,SACXH,OAAQ,OACRI,UAAW,UAGEC,UAlEE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACZC,EAAW,6BAA6BC,cAAcC,MAAM,IAClEH,EAAQI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SAFd,MAGIE,mBAAS,IAHb,mBAGzBC,EAHyB,KAGbC,EAHa,KAO1BC,EAAe,SAAAC,GACfA,EAAMC,OAAOzB,MAAOsB,EAAcE,EAAMC,OAAOzB,OAC1CwB,EAAMC,OAAOC,WAAWJ,EAAcE,EAAMC,OAAOC,WAC5DC,QAAQC,IAAIJ,EAAMC,OAAOC,YAGrBG,EAAmBR,EAErBV,EAAQmB,QAAO,SAAAC,GAAM,OACnBA,EAAOb,KAAKc,cAAcC,SAASZ,EAAWa,wBAFhDvB,EAcJ,OACE,oCACE,yBAAKwB,UAAU,SACZvB,EAASwB,KAAI,SAACC,EAAQC,GACrB,OACE,yBAAKC,MAAOhC,EAAgBiC,IAAKF,GAC/B,4BAAQG,QAASlB,GAAec,QAKxC,2BAAOF,UAAU,QAAQI,MAAOnC,GAC9B,2BAAOsC,KAAK,OAAOC,SAAUpB,EAAcqB,YAAY,cACvD,4BACGf,EAAgBO,KAAI,SAACS,EAAQP,GAC5B,OACE,wBAAIE,IAAKF,GACP,kBAAC,IAAD,CAAMQ,GAAI,IAAMD,EAAOE,IAAKF,EAAO3B","file":"static/js/4.bcae1a72.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Contacts = ({ clients }) => {\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split(\"\");\n  clients.sort((a, b) => a.name.localeCompare(b.name));\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  /*   const [clientsFromProps, setClients] = useState(clients);\n   */\n\n  const handleChange = event => {\n    if (event.target.value) setSearchTerm(event.target.value);\n    else if (event.target.innerText) setSearchTerm(event.target.innerText);\n    console.log(event.target.innerText);\n  };\n\n  const filteredClients = !searchTerm\n    ? clients\n    : clients.filter(person =>\n        person.name.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n      );\n  /* \n  useEffect(() => {\n    const filteredClients = clientsFromProps.filter(client => {\n      return client.name.toLowerCase().includes(searchTerm);\n    });\n\n    setClients(filteredClients);\n    //setClients(filteredClients);\n  }, [clientsFromProps, searchTerm]);\n */\n  return (\n    <>\n      <nav className=\"col-1\">\n        {alphabet.map((letter, index) => {\n          return (\n            <div style={alphabetStyles} key={index}>\n              <button onClick={handleChange}>{letter}</button>\n            </div>\n          );\n        })}\n      </nav>\n      <aside className=\"col-4\" style={asideStyles}>\n        <input type=\"text\" onChange={handleChange} placeholder=\"Search...\" />\n        <ul>\n          {filteredClients.map((client, index) => {\n            return (\n              <li key={index}>\n                <Link to={`/` + client.id}>{client.name}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </aside>\n    </>\n  );\n};\n\nconst asideStyles = {\n  height: \"100%\",\n  backgroundColor: \"beige\"\n};\n\nconst alphabetStyles = {\n  textAlign: \"center\",\n  height: \"40px\",\n  overflowY: \"scroll\"\n};\n\nexport default Contacts;\n"],"sourceRoot":""}